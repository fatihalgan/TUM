<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd  http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">
    
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>
                <!--<property name="hibernate.hbm2ddl.auto" value="create-drop"/>-->
                <prop key="hibernate.connection.driver_class">oracle.jdbc.driver.OracleDriver</prop>
                <prop key="hibernate.connection.url">jdbc:oracle:thin:@192.168.7.3:1521:one2many</prop>
                <prop key="hibernate.connection.username">tump</prop>
                <prop key="hibernate.connection.password">tump</prop>
                <prop key="hibernate.connection.provider_class">org.hibernate.connection.C3P0ConnectionProvider</prop>
                <prop key="hibernate.c3po.min_size">5</prop>
                <prop key="hibernate.c3po.max_size">5</prop>
                <prop key="hibernate.c3po.timeout">1800</prop>
                <prop key="hibernate.c3po.max_statements">50</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.query.substitutions">true</prop>
                <prop key="hibernate.use_outer_join">true</prop>
                <prop key="hibernate.max_fetch_depth">5</prop>
                <prop key="hibernate.cglib.use_reflection_optimizer">true</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
            </props>
        </property>
        <property name="mappingResources">
            <list>
                <value>security.hbm.xml</value>
                <value>params.hbm.xml</value>
                <value>dealer.hbm.xml</value>
                <value>account.hbm.xml</value>
            </list>
        </property>
    </bean>
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="sessionFactory">
            <ref bean="sessionFactory"/>
        </property>
    </bean>
    <bean id="daoTemplate" abstract="true">
        <property name="hibernateTemplate">
            <ref bean="hibernateTemplate"/>
        </property>
    </bean>
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean id="tumpGatewayDao" class="mcel.tump.gateway.dao.TUMPGatewayDaoImpl" parent="daoTemplate"/>
    <bean id="paramsDao"  class="mcel.tump.reference.dao.ParametersDaoImpl" parent="daoTemplate"/>
    <bean id="accountDao" class="mcel.tump.account.dao.AccountDaoImpl" parent="daoTemplate"/>
    <bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager">
            <ref bean="transactionManager" />
        </property>
        <property name="transactionAttributeSource">
            <value>
                mcel.tump.gateway.service.ITUMPGatewayService.writeFinalLog* = PROPAGATION_REQUIRES_NEW, ISOLATION_REPEATABLE_READ
                mcel.tump.gateway.service.ITUMPGatewayService.* = PROPAGATION_REQUIRED, ISOLATION_READ_COMMITTED
                mcel.tump.reference.service.IParametersService.get* = PROPAGATION_REQUIRED,readOnly
                mcel.tump.reference.service.IParametersService.* = PROPAGATION_REQUIRED, ISOLATION_READ_COMMITTED
            </value>
        </property>
    </bean>
    <bean id="tumpGatewayServiceTarget" class="mcel.tump.gateway.service.TUMPGatewayService">
        <property name="tumpGatewayDao">
            <ref bean="tumpGatewayDao" />
        </property>
        <property name="airServiceGateway">
            <ref bean="airServiceGateway"/>
        </property>
    </bean>
    <bean id="tumpGatewayService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <list>
                <value>
                    mcel.tump.gateway.service.ITUMPGatewayService
                </value>
            </list>
        </property>
        <property name="interceptorNames">
            <value>transactionInterceptor</value>
        </property>
        <property name="target">
            <ref bean="tumpGatewayServiceTarget" />
        </property>
    </bean>
    <bean id="parametersServiceTarget" class="mcel.tump.reference.service.ParametersService">
        <property name="paramsDao">
            <ref bean="paramsDao"/>
        </property>
        <property name="accountDao">
            <ref bean="accountDao"/>
        </property>
    </bean>
    <bean id="parametersService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <list>
                <value>mcel.tump.reference.service.IParametersService</value>
            </list>
	</property>
	<property name="interceptorNames">
            <value>transactionInterceptor</value>
	</property>
	<property name="target">
            <ref bean="parametersServiceTarget"/>
	</property>
    </bean>
    <bean id="airServiceGateway" class="mcel.tump.cs.air.AIRServiceGateway">
        <property name="parametersService">
            <ref bean="parametersService"/>
        </property>
        <property name="xmlrpcClient">
            <ref bean="xmlrpcClient"/>
        </property>
    </bean>
    <bean id="xmlrpcClient" class="mcel.tump.xmlrpc.XMLRPCClient">
        <constructor-arg index="0">
             <value>http://192.168.40.31:10010/Air</value>
         </constructor-arg>
         <constructor-arg index="1">
             <value>12000</value>
         </constructor-arg>
         <constructor-arg index="2">
             <value>UGw Server/2.1/1.0</value>
         </constructor-arg>
    </bean>
    <!-- 
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="mail.mycompany.com"/>
    </bean>
    -->
</beans>